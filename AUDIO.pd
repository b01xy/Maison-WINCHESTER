#N canvas 523 199 1009 662 10;
#X obj 1668 839 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1678 849 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1688 859 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1698 869 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1708 879 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1718 889 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1728 899 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1738 909 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1748 919 cnv 15 100 60 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 1 0 cnv 15 1900 768 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 3 2 cnv 15 1896 764 empty empty Synopsie 20 20 0 21 -182954
-66577 0;
#X obj 502 413 vsl 15 100 0 1.5 0 0 empty empty empty 0 -8 0 8 -241291
-1 -1 5280 0;
#X obj 10 58 loadbang;
#X msg 10 179 \; pd dsp 1 \;;
#X floatatom 502 521 5 0 0 0 - - -, f 5;
#X text 518 437 Volume;
#N canvas 813 194 1029 711 playlist_player 0;
#X msg 179 36 seek \$1;
#X floatatom 241 38 5 0 0 0 - - -, f 5;
#X msg 140 65 sort \$1;
#X obj 201 66 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0 1
;
#X obj 35 72 loadbang;
#X msg 185 122 scroll 200;
#X msg -114 465 bang;
#X obj -151 627 msgfile;
#N canvas 76 237 646 300 navigation 0;
#X obj 54 272 outlet;
#X msg 91 140 rewind;
#X text 140 139 go to beginning;
#X msg 92 163 end;
#X text 139 163 go the the end;
#X msg 92 214 skip -1;
#X msg 92 238 where;
#X text 145 237 where are we now ?;
#X text 146 214 go to the <n>th line from here;
#X text 142 188 go to line number <n>;
#X text 44 38 navigating through the lines of a [msgfile];
#X text 42 62 these messages will not output any data;
#X text 41 96 'where' will output the position of the "cursor" at the
2nd outlet of [msgfile];
#X msg 92 189 goto 8;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 13 0 0 0;
#X restore -114 510 pd navigation;
#N canvas 707 298 458 426 data 0;
#X obj 54 332 outlet;
#X msg 105 143 bang;
#X msg 103 231 next;
#X msg 102 189 prev;
#X msg 103 210 this;
#X text 154 140 output one line as a list and move to the next;
#X text 151 189 output the previous line;
#X text 153 229 output the next line;
#X text 151 209 output the current line;
#X msg 104 264 flush;
#X text 153 263 output all lines;
#X text 39 37 get the contents of the [msgfile] line-by-line;
#X text 37 63 'prev' \, 'this' \, 'next' and 'flush' will not alter
the current "cursor" position.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 9 0 0 0;
#X restore -114 490 pd data retrieval;
#N canvas 489 234 669 573 editing 0;
#X obj 54 512 outlet;
#X msg 137 101 clear;
#X msg 140 481 set 2 4 6 8;
#X text 246 480 clear and then add one message;
#X msg 136 258 add cis boom bah;
#X msg 136 277 add2 bang;
#X text 190 102 empty the object;
#X msg 137 161 delete 2;
#X text 272 303 insert a message before the current line;
#X text 238 255 add a message at the end of the object;
#X msg 137 359 append after the break of dawn;
#X text 331 356 add a message at the current position;
#X msg 138 437 replace the new day;
#X text 330 437 replace the current line;
#X msg 136 306 insert before sunrise;
#X msg 136 325 insert2 inserted;
#X msg 137 378 append2 appendix;
#X msg 137 141 delete;
#X text 191 142 delete the current line;
#X text 194 161 delete the specified line;
#X msg 137 180 delete 4 7;
#X text 205 181 delete the specified region;
#X msg 137 200 delete 7 4;
#X text 208 200 delete all but the specified region;
#X text 56 39 editing (adding \, modifying \, deleting) the content
if the [msgfile];
#X text 237 275 add to the last line (INCOMPATIBLE with [textfile])
;
#X text 275 325 add to the previous line (INCOMPATIBLE with [textfile])
;
#X text 330 379 add to the current line (INCOMPATIBLE with [textfile])
;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 0 0;
#X connect 10 0 0 0;
#X connect 12 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
#X connect 20 0 0 0;
#X connect 22 0 0 0;
#X restore -114 530 pd editing;
#N canvas 0 50 676 304 searching 0;
#X obj 54 272 outlet;
#X msg 70 180 find test 6;
#X msg 70 239 find test * 7 *;
#X text 73 61 searching (and finding) lines within the [msgfile];
#X text 177 241 you can use '*' as a wildchard for a single atom. '*'
is the only wildcard supported;
#X text 174 178 find a matching list \, starting at the current position
;
#X msg 72 208 find the new day;
#X text 76 130 if the search fails \, a 'bang' is emitted at the 2nd
outlet;
#X text 77 99 if the searched list is found \, then the linenumber
and the list is output (via the 2nd and 1st outlet).;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 6 0 0 0;
#X restore -114 550 pd searching;
#N canvas 575 306 853 402 file-i/o 0;
#X obj 54 312 outlet;
#X text 265 75 read a file;
#X text 299 96 write one;
#X text 305 164 write a file \, terminating lines only with carriage
return (omitting semicolons.) You can read files this way too \, in
which case carriage returns are mapped to semicolons.;
#X msg 87 76 read msgfile.txt;
#X msg 87 168 write /tmp/msgfile2.txt cr;
#X msg 87 191 read msgfile2.txt cr;
#X msg 87 97 write /tmp/msgfile.txt;
#X text 51 26 reading from and writing the contents of [msgfile] to
files;
#X msg 111 248 write /tmp/msgfile3.txt $$;
#X text 331 238 on writing replace every occurence of $$ with a single
$. This way you can write pd-patches which can handle arguments.;
#X msg 146 291 add #X obj f $\\\$1;
#X msg 92 130 read2 msgfile.txt;
#X text 264 131 read file and append it to the current buffer;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X restore -114 570 pd file-i/o;
#N canvas 56 448 450 397 misc 0;
#X obj 84 282 outlet;
#X msg 84 112 print;
#X text 40 72 miscellaneous functionality of [msgfile];
#X text 126 114 debugging printout of the contents to the console;
#X connect 1 0 0 0;
#X restore -114 590 pd misc;
#X text -183 450 clear;
#X obj -190 338 bng 29 250 50 0 empty empty empty 17 7 0 10 -258113
-4034 -1;
#X msg -174 469 clear;
#X msg -40 593 delete;
#X msg -125 125 location /media/Docs/Vid_gnirut-test/bacteria;
#X obj -190 373 openpanel;
#X msg -190 414 read \$1 cr;
#X msg 35 97 location /media/Docs/Vid_gnirut-test/patch/playlist;
#X obj -187 216 inlet;
#X obj -100 220 inlet;
#X obj 284 251 inlet;
#X obj -151 689 outlet;
#X obj -112 663 print playlistdone;
#X msg 39 311 next;
#X msg 38 269 prev;
#X obj 126 215 loadbang;
#X msg 161 392 goto \$1;
#X floatatom 274 372 5 0 0 0 - - -, f 5;
#X msg 35 480 this;
#X obj -101 339 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 111 446 t b a;
#X msg 126 248 read SON.txt cr;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 21 0;
#X connect 6 0 7 0;
#X connect 7 0 25 0;
#X connect 7 1 26 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 15 0 19 0;
#X connect 16 0 7 0;
#X connect 17 0 7 0;
#X connect 19 0 20 0;
#X connect 20 0 7 0;
#X connect 22 0 15 0;
#X connect 23 0 33 0;
#X connect 24 0 30 0;
#X connect 27 0 7 0;
#X connect 28 0 7 0;
#X connect 29 0 35 0;
#X connect 30 0 34 0;
#X connect 31 0 30 0;
#X connect 32 0 7 0;
#X connect 33 0 6 0;
#X connect 34 0 32 0;
#X connect 34 1 7 0;
#X connect 35 0 7 0;
#X restore 353 283 pd playlist_player;
#X obj 353 260 bng 15 250 50 0 empty empty Load 17 7 0 10 -258113 -4034
-1;
#X obj 369 307 print dataTXT;
#X obj 405 254 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X symbolatom 353 333 32 0 0 0 - - -, f 32;
#X obj 458 170 bng 29 250 50 0 empty empty empty 17 7 0 10 -258113
-4034 -1;
#X floatatom 458 248 5 0 0 0 - - -, f 5;
#X floatatom 346 64 0 0 0 0 - - -;
#X obj 266 78 print tcp;
#X obj 311 167 t b a;
#N canvas 133 432 1132 534 readaudio 0;
#X obj 38 377 dac~;
#X obj 38 342 *~ 0;
#X obj 79 342 *~ 0;
#X msg 227 155 pause;
#X msg 39 224 open \$1;
#X obj 39 196 openpanel;
#X obj 39 164 bng 25 250 50 0 empty empty empty 17 7 0 10 -4032 -1
-1;
#X msg 186 155 stop;
#X floatatom 272 562 5 0 0 0 - - -, f 5;
#X floatatom 318 514 5 0 0 0 - - -, f 5;
#X floatatom 227 592 5 0 0 0 - - -, f 5;
#X floatatom 363 477 5 0 0 0 - - -, f 5;
#X obj 454 414 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 227 388 route ready samplerate length cache float bang;
#X floatatom 409 445 5 0 0 0 - - -, f 5;
#X text 272 591 ready: status for when a file is loaded and ready;
#X text 404 476 cache: percentage (0.0->1.0) of;
#X text 445 489 cache being used.;
#X text 479 415 bang: end of file.;
#X text 227 310 <- readanysf~ has 3 possible creation args 1) number
of channels (all channels will be up or down mixed accordingly) default
is 2 channels. 2) number of "frames" in the internal buffer. Default=24
3) number of samples per frame in internal buffer. Default is your
blocksize.;
#X text 451 444 float: position of file in seconds;
#X text 492 457 relative to the file's samplerate;
#X text 357 513 length: total duration of file in seconds;
#X text 404 539 (will be empty for network streams);
#X text 406 526 relative to file's internal samplerate;
#X text 330 563 The samplerate of the file being played.;
#X obj 84 21 inlet;
#X obj 147 18 inlet;
#X obj 409 465 outlet;
#X obj 216 22 inlet;
#X obj 477 430 outlet;
#X obj 309 208 print aaaa;
#X obj 60 253 t a a;
#X obj 39 279 readanysf~ 2;
#X obj 128 388 env~;
#X obj 128 427 outlet;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 2 0 34 0;
#X connect 3 0 33 0;
#X connect 4 0 32 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 33 0;
#X connect 12 0 7 0;
#X connect 12 0 30 0;
#X connect 13 0 10 0;
#X connect 13 1 8 0;
#X connect 13 2 9 0;
#X connect 13 3 11 0;
#X connect 13 4 14 0;
#X connect 13 5 12 0;
#X connect 14 0 28 0;
#X connect 26 0 32 0;
#X connect 27 0 33 0;
#X connect 29 0 1 1;
#X connect 29 0 2 1;
#X connect 32 0 33 0;
#X connect 32 1 31 0;
#X connect 33 0 1 0;
#X connect 33 1 2 0;
#X connect 33 2 13 0;
#X connect 34 0 35 0;
#X restore 385 551 pd readaudio;
#X obj 353 412 t b a;
#X obj 419 497 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 425 575 5 0 0 0 - - -, f 5;
#X obj 549 371 loadbang;
#X obj 458 139 loadbang;
#X obj 244 108 route CUTS;
#X msg 419 519 play;
#X msg 452 519 pause;
#X obj 144 145 print undecut;
#X obj 329 144 print noroute;
#X obj 244 149 sel 1;
#X msg 353 390 open ../SON/\$1;
#X text 126 98 SON DES VIDEOS;
#X text 367 105 SON DU REPERTOIRE "SON";
#X obj 763 411 vsl 15 100 0 1.5 0 0 empty empty empty 0 -8 0 8 -241291
-1 -1 1980 0;
#X floatatom 763 520 5 0 0 0 - - -, f 5;
#X text 779 436 Volume;
#N canvas 1 99 1029 711 playlist_player 0;
#X msg 179 36 seek \$1;
#X floatatom 241 38 5 0 0 0 - - -, f 5;
#X msg 140 65 sort \$1;
#X obj 201 66 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0 1
;
#X obj 35 72 loadbang;
#X msg 185 122 scroll 200;
#X msg -114 465 bang;
#X obj -151 627 msgfile;
#N canvas 76 237 646 300 navigation 0;
#X obj 54 272 outlet;
#X msg 91 140 rewind;
#X text 140 139 go to beginning;
#X msg 92 163 end;
#X text 139 163 go the the end;
#X msg 92 214 skip -1;
#X msg 92 238 where;
#X text 145 237 where are we now ?;
#X text 146 214 go to the <n>th line from here;
#X text 142 188 go to line number <n>;
#X text 44 38 navigating through the lines of a [msgfile];
#X text 42 62 these messages will not output any data;
#X text 41 96 'where' will output the position of the "cursor" at the
2nd outlet of [msgfile];
#X msg 92 189 goto 8;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 13 0 0 0;
#X restore -114 510 pd navigation;
#N canvas 707 298 458 426 data 0;
#X obj 54 332 outlet;
#X msg 105 143 bang;
#X msg 103 231 next;
#X msg 102 189 prev;
#X msg 103 210 this;
#X text 154 140 output one line as a list and move to the next;
#X text 151 189 output the previous line;
#X text 153 229 output the next line;
#X text 151 209 output the current line;
#X msg 104 264 flush;
#X text 153 263 output all lines;
#X text 39 37 get the contents of the [msgfile] line-by-line;
#X text 37 63 'prev' \, 'this' \, 'next' and 'flush' will not alter
the current "cursor" position.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 9 0 0 0;
#X restore -114 490 pd data retrieval;
#N canvas 489 234 669 573 editing 0;
#X obj 54 512 outlet;
#X msg 137 101 clear;
#X msg 140 481 set 2 4 6 8;
#X text 246 480 clear and then add one message;
#X msg 136 258 add cis boom bah;
#X msg 136 277 add2 bang;
#X text 190 102 empty the object;
#X msg 137 161 delete 2;
#X text 272 303 insert a message before the current line;
#X text 238 255 add a message at the end of the object;
#X msg 137 359 append after the break of dawn;
#X text 331 356 add a message at the current position;
#X msg 138 437 replace the new day;
#X text 330 437 replace the current line;
#X msg 136 306 insert before sunrise;
#X msg 136 325 insert2 inserted;
#X msg 137 378 append2 appendix;
#X msg 137 141 delete;
#X text 191 142 delete the current line;
#X text 194 161 delete the specified line;
#X msg 137 180 delete 4 7;
#X text 205 181 delete the specified region;
#X msg 137 200 delete 7 4;
#X text 208 200 delete all but the specified region;
#X text 56 39 editing (adding \, modifying \, deleting) the content
if the [msgfile];
#X text 237 275 add to the last line (INCOMPATIBLE with [textfile])
;
#X text 275 325 add to the previous line (INCOMPATIBLE with [textfile])
;
#X text 330 379 add to the current line (INCOMPATIBLE with [textfile])
;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 0 0;
#X connect 10 0 0 0;
#X connect 12 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
#X connect 20 0 0 0;
#X connect 22 0 0 0;
#X restore -114 530 pd editing;
#N canvas 0 50 676 304 searching 0;
#X obj 54 272 outlet;
#X msg 70 180 find test 6;
#X msg 70 239 find test * 7 *;
#X text 73 61 searching (and finding) lines within the [msgfile];
#X text 177 241 you can use '*' as a wildchard for a single atom. '*'
is the only wildcard supported;
#X text 174 178 find a matching list \, starting at the current position
;
#X msg 72 208 find the new day;
#X text 76 130 if the search fails \, a 'bang' is emitted at the 2nd
outlet;
#X text 77 99 if the searched list is found \, then the linenumber
and the list is output (via the 2nd and 1st outlet).;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 6 0 0 0;
#X restore -114 550 pd searching;
#N canvas 575 306 853 402 file-i/o 0;
#X obj 54 312 outlet;
#X text 265 75 read a file;
#X text 299 96 write one;
#X text 305 164 write a file \, terminating lines only with carriage
return (omitting semicolons.) You can read files this way too \, in
which case carriage returns are mapped to semicolons.;
#X msg 87 76 read msgfile.txt;
#X msg 87 168 write /tmp/msgfile2.txt cr;
#X msg 87 191 read msgfile2.txt cr;
#X msg 87 97 write /tmp/msgfile.txt;
#X text 51 26 reading from and writing the contents of [msgfile] to
files;
#X msg 111 248 write /tmp/msgfile3.txt $$;
#X text 331 238 on writing replace every occurence of $$ with a single
$. This way you can write pd-patches which can handle arguments.;
#X msg 146 291 add #X obj f $\\\$1;
#X msg 92 130 read2 msgfile.txt;
#X text 264 131 read file and append it to the current buffer;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X restore -114 570 pd file-i/o;
#N canvas 56 448 450 397 misc 0;
#X obj 84 282 outlet;
#X msg 84 112 print;
#X text 40 72 miscellaneous functionality of [msgfile];
#X text 126 114 debugging printout of the contents to the console;
#X connect 1 0 0 0;
#X restore -114 590 pd misc;
#X text -183 450 clear;
#X obj -190 338 bng 29 250 50 0 empty empty empty 17 7 0 10 -258113
-4034 -1;
#X msg -174 469 clear;
#X msg -40 593 delete;
#X msg -125 125 location /media/Docs/Vid_gnirut-test/bacteria;
#X obj -190 373 openpanel;
#X msg -190 414 read \$1 cr;
#X msg 35 97 location /media/Docs/Vid_gnirut-test/patch/playlist;
#X obj -187 216 inlet;
#X obj -100 220 inlet;
#X obj 284 251 inlet;
#X obj -151 689 outlet;
#X obj -112 663 print playlistdone;
#X msg 39 311 next;
#X msg 38 269 prev;
#X obj 126 215 loadbang;
#X msg 161 392 goto \$1;
#X floatatom 274 372 5 0 0 0 - - -, f 5;
#X msg 35 480 this;
#X obj -101 339 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 111 446 t b a;
#X msg 126 248 read SON_FOND.txt cr;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 21 0;
#X connect 6 0 7 0;
#X connect 7 0 25 0;
#X connect 7 1 26 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 15 0 19 0;
#X connect 16 0 7 0;
#X connect 17 0 7 0;
#X connect 19 0 20 0;
#X connect 20 0 7 0;
#X connect 22 0 15 0;
#X connect 23 0 33 0;
#X connect 24 0 30 0;
#X connect 27 0 7 0;
#X connect 28 0 7 0;
#X connect 29 0 35 0;
#X connect 30 0 34 0;
#X connect 31 0 30 0;
#X connect 32 0 7 0;
#X connect 33 0 6 0;
#X connect 34 0 32 0;
#X connect 34 1 7 0;
#X connect 35 0 7 0;
#X restore 614 282 pd playlist_player;
#X obj 614 259 bng 15 250 50 0 empty empty Load 17 7 0 10 -258113 -4034
-1;
#X obj 630 306 print dataTXT;
#X obj 666 253 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X symbolatom 614 332 32 0 0 0 - - -, f 32;
#X obj 719 169 bng 29 250 50 0 empty empty empty 17 7 0 10 -258113
-4034 -1;
#X floatatom 732 249 5 0 0 0 - - -, f 5;
#N canvas 137 424 1132 534 readaudio 0;
#X obj 38 377 dac~;
#X obj 38 342 *~ 0;
#X obj 79 342 *~ 0;
#X msg 203 149 pause;
#X msg 39 224 open \$1;
#X obj 39 196 openpanel;
#X obj 39 164 bng 25 250 50 0 empty empty empty 17 7 0 10 -4032 -1
-1;
#X msg 162 149 stop;
#X floatatom 272 562 5 0 0 0 - - -, f 5;
#X floatatom 318 514 5 0 0 0 - - -, f 5;
#X floatatom 227 592 5 0 0 0 - - -, f 5;
#X floatatom 363 477 5 0 0 0 - - -, f 5;
#X obj 454 414 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 227 388 route ready samplerate length cache float bang;
#X floatatom 409 445 5 0 0 0 - - -, f 5;
#X text 272 591 ready: status for when a file is loaded and ready;
#X text 404 476 cache: percentage (0.0->1.0) of;
#X text 445 489 cache being used.;
#X text 479 415 bang: end of file.;
#X text 227 310 <- readanysf~ has 3 possible creation args 1) number
of channels (all channels will be up or down mixed accordingly) default
is 2 channels. 2) number of "frames" in the internal buffer. Default=24
3) number of samples per frame in internal buffer. Default is your
blocksize.;
#X text 451 444 float: position of file in seconds;
#X text 492 457 relative to the file's samplerate;
#X text 357 513 length: total duration of file in seconds;
#X text 404 539 (will be empty for network streams);
#X text 406 526 relative to file's internal samplerate;
#X text 330 563 The samplerate of the file being played.;
#X obj 84 21 inlet;
#X obj 145 22 inlet;
#X obj 409 465 outlet;
#X obj 216 22 inlet;
#X obj 548 201 outlet;
#X obj 309 208 print aaaa;
#X obj 60 253 t a a;
#X obj 39 279 readanysf~ 2;
#X floatatom 425 575 5 0 0 0 - - -, f 5;
#X obj 128 388 env~;
#X obj 128 427 outlet;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 2 0 35 0;
#X connect 3 0 33 0;
#X connect 4 0 32 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 33 0;
#X connect 12 0 7 0;
#X connect 12 0 30 0;
#X connect 13 0 10 0;
#X connect 13 1 8 0;
#X connect 13 2 9 0;
#X connect 13 3 11 0;
#X connect 13 4 14 0;
#X connect 13 5 12 0;
#X connect 14 0 28 0;
#X connect 26 0 32 0;
#X connect 27 0 33 0;
#X connect 29 0 1 1;
#X connect 29 0 2 1;
#X connect 32 0 33 0;
#X connect 32 1 31 0;
#X connect 33 0 1 0;
#X connect 33 1 2 0;
#X connect 33 2 13 0;
#X connect 35 0 36 0;
#X restore 646 550 pd readaudio;
#X obj 614 411 t b a;
#X obj 680 496 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 686 575 5 0 0 0 - - -, f 5;
#X obj 810 370 loadbang;
#X obj 719 138 loadbang;
#X msg 680 518 play;
#X msg 713 518 pause;
#X text 663 99 SON DU REPERTOIRE "SON_FOND";
#X msg 614 389 open ../SON_FOND/\$1;
#X floatatom 385 575 5 0 0 0 - - -, f 5;
#X floatatom 646 575 5 0 0 0 - - -, f 5;
#X text 371 598 Volume;
#X text 435 598 Temps;
#X text 635 598 Volume;
#X text 699 598 Temps;
#X obj 235 412 vsl 15 100 0 1.5 0 0 empty empty empty 0 -8 0 8 -241291
-1 -1 7400 0;
#X floatatom 235 519 5 0 0 0 - - -, f 5;
#X text 251 435 Volume;
#N canvas 805 210 1029 711 playlist_player 0;
#X msg 179 36 seek \$1;
#X floatatom 241 38 5 0 0 0 - - -, f 5;
#X msg 140 65 sort \$1;
#X obj 201 66 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0 1
;
#X obj 35 72 loadbang;
#X msg 185 122 scroll 200;
#X msg -114 465 bang;
#X obj -151 627 msgfile;
#N canvas 76 237 646 300 navigation 0;
#X obj 54 272 outlet;
#X msg 91 140 rewind;
#X text 140 139 go to beginning;
#X msg 92 163 end;
#X text 139 163 go the the end;
#X msg 92 214 skip -1;
#X msg 92 238 where;
#X text 145 237 where are we now ?;
#X text 146 214 go to the <n>th line from here;
#X text 142 188 go to line number <n>;
#X text 44 38 navigating through the lines of a [msgfile];
#X text 42 62 these messages will not output any data;
#X text 41 96 'where' will output the position of the "cursor" at the
2nd outlet of [msgfile];
#X msg 92 189 goto 8;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 13 0 0 0;
#X restore -114 510 pd navigation;
#N canvas 707 298 458 426 data 0;
#X obj 54 332 outlet;
#X msg 105 143 bang;
#X msg 103 231 next;
#X msg 102 189 prev;
#X msg 103 210 this;
#X text 154 140 output one line as a list and move to the next;
#X text 151 189 output the previous line;
#X text 153 229 output the next line;
#X text 151 209 output the current line;
#X msg 104 264 flush;
#X text 153 263 output all lines;
#X text 39 37 get the contents of the [msgfile] line-by-line;
#X text 37 63 'prev' \, 'this' \, 'next' and 'flush' will not alter
the current "cursor" position.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 9 0 0 0;
#X restore -114 490 pd data retrieval;
#N canvas 489 234 669 573 editing 0;
#X obj 54 512 outlet;
#X msg 137 101 clear;
#X msg 140 481 set 2 4 6 8;
#X text 246 480 clear and then add one message;
#X msg 136 258 add cis boom bah;
#X msg 136 277 add2 bang;
#X text 190 102 empty the object;
#X msg 137 161 delete 2;
#X text 272 303 insert a message before the current line;
#X text 238 255 add a message at the end of the object;
#X msg 137 359 append after the break of dawn;
#X text 331 356 add a message at the current position;
#X msg 138 437 replace the new day;
#X text 330 437 replace the current line;
#X msg 136 306 insert before sunrise;
#X msg 136 325 insert2 inserted;
#X msg 137 378 append2 appendix;
#X msg 137 141 delete;
#X text 191 142 delete the current line;
#X text 194 161 delete the specified line;
#X msg 137 180 delete 4 7;
#X text 205 181 delete the specified region;
#X msg 137 200 delete 7 4;
#X text 208 200 delete all but the specified region;
#X text 56 39 editing (adding \, modifying \, deleting) the content
if the [msgfile];
#X text 237 275 add to the last line (INCOMPATIBLE with [textfile])
;
#X text 275 325 add to the previous line (INCOMPATIBLE with [textfile])
;
#X text 330 379 add to the current line (INCOMPATIBLE with [textfile])
;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 0 0;
#X connect 10 0 0 0;
#X connect 12 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
#X connect 20 0 0 0;
#X connect 22 0 0 0;
#X restore -114 530 pd editing;
#N canvas 0 50 676 304 searching 0;
#X obj 54 272 outlet;
#X msg 70 180 find test 6;
#X msg 70 239 find test * 7 *;
#X text 73 61 searching (and finding) lines within the [msgfile];
#X text 177 241 you can use '*' as a wildchard for a single atom. '*'
is the only wildcard supported;
#X text 174 178 find a matching list \, starting at the current position
;
#X msg 72 208 find the new day;
#X text 76 130 if the search fails \, a 'bang' is emitted at the 2nd
outlet;
#X text 77 99 if the searched list is found \, then the linenumber
and the list is output (via the 2nd and 1st outlet).;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 6 0 0 0;
#X restore -114 550 pd searching;
#N canvas 575 306 853 402 file-i/o 0;
#X obj 54 312 outlet;
#X text 265 75 read a file;
#X text 299 96 write one;
#X text 305 164 write a file \, terminating lines only with carriage
return (omitting semicolons.) You can read files this way too \, in
which case carriage returns are mapped to semicolons.;
#X msg 87 76 read msgfile.txt;
#X msg 87 168 write /tmp/msgfile2.txt cr;
#X msg 87 191 read msgfile2.txt cr;
#X msg 87 97 write /tmp/msgfile.txt;
#X text 51 26 reading from and writing the contents of [msgfile] to
files;
#X msg 111 248 write /tmp/msgfile3.txt $$;
#X text 331 238 on writing replace every occurence of $$ with a single
$. This way you can write pd-patches which can handle arguments.;
#X msg 146 291 add #X obj f $\\\$1;
#X msg 92 130 read2 msgfile.txt;
#X text 264 131 read file and append it to the current buffer;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X restore -114 570 pd file-i/o;
#N canvas 56 448 450 397 misc 0;
#X obj 84 282 outlet;
#X msg 84 112 print;
#X text 40 72 miscellaneous functionality of [msgfile];
#X text 126 114 debugging printout of the contents to the console;
#X connect 1 0 0 0;
#X restore -114 590 pd misc;
#X text -183 450 clear;
#X obj -190 338 bng 29 250 50 0 empty empty empty 17 7 0 10 -258113
-4034 -1;
#X msg -174 469 clear;
#X msg -40 593 delete;
#X msg -125 125 location /media/Docs/Vid_gnirut-test/bacteria;
#X obj -190 373 openpanel;
#X msg -190 414 read \$1 cr;
#X msg 35 97 location /media/Docs/Vid_gnirut-test/patch/playlist;
#X obj -187 216 inlet;
#X obj -100 220 inlet;
#X obj 284 251 inlet;
#X obj -151 689 outlet;
#X obj -112 663 print playlistdone;
#X msg 39 311 next;
#X msg 38 269 prev;
#X obj 126 215 loadbang;
#X msg 161 392 goto \$1;
#X floatatom 274 372 5 0 0 0 - - -, f 5;
#X msg 35 480 this;
#X obj -101 339 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 111 446 t b a;
#X msg 126 248 read VIDEOSAUDIO.txt cr;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 21 0;
#X connect 6 0 7 0;
#X connect 7 0 25 0;
#X connect 7 1 26 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 15 0 19 0;
#X connect 16 0 7 0;
#X connect 17 0 7 0;
#X connect 19 0 20 0;
#X connect 20 0 7 0;
#X connect 22 0 15 0;
#X connect 23 0 33 0;
#X connect 24 0 30 0;
#X connect 27 0 7 0;
#X connect 28 0 7 0;
#X connect 29 0 35 0;
#X connect 30 0 34 0;
#X connect 31 0 30 0;
#X connect 32 0 7 0;
#X connect 33 0 6 0;
#X connect 34 0 32 0;
#X connect 34 1 7 0;
#X connect 35 0 7 0;
#X restore 86 281 pd playlist_player;
#X obj 86 258 bng 15 250 50 0 empty empty Load 17 7 0 10 -258113 -4034
-1;
#X obj 102 305 print dataTXT;
#X obj 147 255 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X symbolatom 86 331 32 0 0 0 - - -, f 32;
#X floatatom 214 248 5 0 0 0 - - -, f 5;
#N canvas 123 452 1132 534 readaudio 0;
#X obj 38 377 dac~;
#X obj 38 342 *~ 0;
#X obj 79 342 *~ 0;
#X msg 227 155 pause;
#X msg 39 224 open \$1;
#X obj 39 196 openpanel;
#X obj 39 164 bng 25 250 50 0 empty empty empty 17 7 0 10 -4032 -1
-1;
#X msg 186 155 stop;
#X floatatom 272 562 5 0 0 0 - - -, f 5;
#X floatatom 318 514 5 0 0 0 - - -, f 5;
#X floatatom 227 592 5 0 0 0 - - -, f 5;
#X floatatom 363 477 5 0 0 0 - - -, f 5;
#X obj 454 414 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 227 388 route ready samplerate length cache float bang;
#X floatatom 409 445 5 0 0 0 - - -, f 5;
#X text 272 591 ready: status for when a file is loaded and ready;
#X text 404 476 cache: percentage (0.0->1.0) of;
#X text 445 489 cache being used.;
#X text 479 415 bang: end of file.;
#X text 227 310 <- readanysf~ has 3 possible creation args 1) number
of channels (all channels will be up or down mixed accordingly) default
is 2 channels. 2) number of "frames" in the internal buffer. Default=24
3) number of samples per frame in internal buffer. Default is your
blocksize.;
#X text 451 444 float: position of file in seconds;
#X text 492 457 relative to the file's samplerate;
#X text 357 513 length: total duration of file in seconds;
#X text 404 539 (will be empty for network streams);
#X text 406 526 relative to file's internal samplerate;
#X text 330 563 The samplerate of the file being played.;
#X obj 84 21 inlet;
#X obj 147 18 inlet;
#X obj 409 465 outlet;
#X obj 216 22 inlet;
#X obj 477 430 outlet;
#X obj 309 208 print aaaa;
#X obj 60 253 t a a;
#X obj 128 388 env~;
#X obj 128 427 outlet;
#X obj 39 279 readanysf~ 2;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 2 0 33 0;
#X connect 3 0 35 0;
#X connect 4 0 32 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 35 0;
#X connect 12 0 7 0;
#X connect 12 0 30 0;
#X connect 13 0 10 0;
#X connect 13 1 8 0;
#X connect 13 2 9 0;
#X connect 13 3 11 0;
#X connect 13 4 14 0;
#X connect 13 5 12 0;
#X connect 14 0 28 0;
#X connect 26 0 32 0;
#X connect 27 0 35 0;
#X connect 29 0 1 1;
#X connect 29 0 2 1;
#X connect 32 0 35 0;
#X connect 32 1 31 0;
#X connect 33 0 34 0;
#X connect 35 0 1 0;
#X connect 35 1 2 0;
#X connect 35 2 13 0;
#X restore 118 549 pd readaudio;
#X obj 86 410 t b a;
#X obj 152 495 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 158 573 5 0 0 0 - - -, f 5;
#X obj 282 369 loadbang;
#X floatatom 118 573 5 0 0 0 - - -, f 5;
#X text 104 596 Volume;
#X text 168 596 Temps;
#X msg 89 180 \; pd dsp 0 \;;
#X obj 152 473 delay 50;
#X obj 419 475 delay 50;
#X obj 680 474 delay 50;
#X msg 152 517 play;
#X msg 185 517 pause;
#X obj 719 213 rtc/xrandom 16;
#X msg 763 387 0.3;
#X obj 244 42 netreceive 3000;
#X msg 502 388 0.8;
#X obj 458 214 rtc/xrandom 44;
#X msg 86 388 open ../VIDEOAUDIOS/\$1;
#X obj 244 128 change;
#X msg 253 386 1.2;
#X connect 11 0 14 0;
#X connect 12 0 13 0;
#X connect 14 0 26 2;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 19 0 16 1;
#X connect 20 0 38 0;
#X connect 21 0 94 0;
#X connect 22 0 16 2;
#X connect 25 1 75 0;
#X connect 26 0 61 0;
#X connect 26 1 29 0;
#X connect 26 2 21 0;
#X connect 27 0 86 0;
#X connect 27 1 26 0;
#X connect 28 0 33 0;
#X connect 30 0 93 0;
#X connect 31 0 21 0;
#X connect 32 0 96 0;
#X connect 32 1 25 0;
#X connect 33 0 26 1;
#X connect 34 0 26 1;
#X connect 37 0 33 0;
#X connect 37 0 57 0;
#X connect 37 1 34 0;
#X connect 37 1 58 0;
#X connect 37 1 89 0;
#X connect 38 0 27 0;
#X connect 41 0 42 0;
#X connect 42 0 51 2;
#X connect 44 0 48 0;
#X connect 45 0 44 0;
#X connect 47 0 44 1;
#X connect 48 0 60 0;
#X connect 49 0 90 0;
#X connect 50 0 44 2;
#X connect 51 0 62 0;
#X connect 51 1 54 0;
#X connect 51 2 49 0;
#X connect 52 0 87 0;
#X connect 52 1 51 0;
#X connect 53 0 57 0;
#X connect 55 0 91 0;
#X connect 56 0 49 0;
#X connect 57 0 51 1;
#X connect 58 0 51 1;
#X connect 60 0 52 0;
#X connect 67 0 68 0;
#X connect 68 0 76 2;
#X connect 70 0 74 0;
#X connect 71 0 70 0;
#X connect 73 0 70 1;
#X connect 74 0 95 0;
#X connect 75 0 70 2;
#X connect 76 0 81 0;
#X connect 76 1 79 0;
#X connect 77 0 85 0;
#X connect 77 1 76 0;
#X connect 78 0 88 0;
#X connect 80 0 97 0;
#X connect 85 0 78 0;
#X connect 86 0 28 0;
#X connect 87 0 53 0;
#X connect 88 0 76 1;
#X connect 89 0 76 1;
#X connect 90 0 50 0;
#X connect 91 0 41 0;
#X connect 92 0 32 0;
#X connect 92 1 23 0;
#X connect 93 0 11 0;
#X connect 94 0 22 0;
#X connect 95 0 77 0;
#X connect 96 0 37 0;
#X connect 96 0 24 0;
#X connect 97 0 67 0;
